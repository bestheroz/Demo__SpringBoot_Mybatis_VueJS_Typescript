# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  npm-install:
    name: 1. npm install & cache
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 14 ]

    steps:
      - uses: actions/checkout@main


      - name: Cache node
        id: cache-node
        uses: actions/cache@main
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

      - name: Use Node.js ${{ matrix.node-version }}
        if: steps.cache-node.outputs.cache-hit != 'true'
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Cypress
        uses: actions/cache@main
        if: steps.cache-node.outputs.cache-hit != 'true'
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}

      - name: npm install
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: |
          cd vue
          npm ci
        env:
          CI: true

  maven-install:
    name: 2. maven install & cache
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java-version: [ 11 ]

    steps:
      - uses: actions/checkout@main

      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@main
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java-${{ matrix.java-version }}-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK ${{ matrix.java-version }}
        if: steps.cache-maven.outputs.cache-hit != 'true'
        uses: actions/setup-java@main
        with:
          java-version: ${{ matrix.java-version }}

      - name: mvn install
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: |
          mvn clean
          mvn dependency:go-offline
          mvn install

  test:
    name: 3. lint & build & run & test
    needs: [npm-install, maven-install]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 14 ]
        java-version: [ 11 ]

    steps:
      - uses: actions/checkout@main

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node
        uses: actions/cache@main
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

      - name: npm run lint
          run: |
            cd vue
            npm run lint

      - name: npm run build
        run: |
          cd vue
          npm run build

      - name: move front-end dist to target
        run: |
          mkdir -p target/classes/static
          mv -f vue/dist/* target/classes/static/

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@main
        with:
          java-version: ${{ matrix.java-version }}

      - name: Cache Maven
        uses: actions/cache@main
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java-${{ matrix.java-version }}-${{ hashFiles('**/pom.xml') }}

      - name: mvn package
        run: |
          mvn package -Dmaven.test.skip=true -Dspring.profiles.active=dev

      - name: start server
        run: |
          cd target
          java -Dfile.encoding=UTF-8 -Xms2g -Xmx2g -XX:+UseG1GC -jar demo-1.jar &

      - name: Cache Cypress
          id: cache-cypress
          uses: actions/cache@main
          with:
            path: ~/.cache/Cypress
            key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}
        id: cache-cypress
        uses: actions/cache@main
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}

      - name: Cypress run
        uses: cypress-io/github-action@main
        with:
          working-directory: vue
          start: npm run serve
          wait-on: 'http://localhost:8081'
          command-prefix: 'percy exec -- npx'
          command: npm run test


